/*  
 * Copyright 2010-2019 Tocean Group.  
 * 版权：商业代码，未经许可，禁止任何形式拷贝、传播及使用
 * （本公司提供源代码只允许甲方作为系统维护、升级之用，未经我司授权，不得用作开发其他系统） 
 * 文件名：${className}Service.java
 * 描述：  
 * 修改人： ${author}
 * 修改时间：${datetime}
 * 跟踪单号：  
 * 修改单号：  
 * 修改内容：  
 */
package ${package}.${moduleName}.service;

import ${package}.${moduleName}.entity.${className}Entity;
import com.toceansoft.common.vo.DynamicCriteria;

import java.util.List;
import java.util.Map;

/**
 * ${comments}
 * 
 * @author ${author}
 */
public interface ${className}Service {
	
	/**
     * 查询（指定对象）
     * @param ${pk.attrname} ${pk.attrType}
     * @return ${className}Entity
     */
	${className}Entity queryObject(${pk.attrType} ${pk.attrname});
	
	/**
     * 列表查询
     *
     * @param map
	 *            Map<String, Object>
	 * @return List<${className}Entity>
     */
	List<${className}Entity> queryList(Map<String, Object> map);
	
   /**
     * 动态条件列表查询
     *
     * @param map
	 *            Map<String, Object>
	 * @return List<${className}Entity>
     */
	List<${className}Entity> queryListByCondition(Map<String, Object> map);
	
	/**
     * 动态条件列表查询
     *
	 * @param criteriaExample
	 *            CriteriaExample
	 * @return List<${className}Entity>
     */
	List<${className}Entity> queryListByCondition(DynamicCriteria criteriaExample);
	
    /**
     * 总记录数量
     *
     * @param map
	 *            Map<String, Object>
	 * @return int
     */
	int queryTotal(Map<String, Object> map);
	
	/**
     * 总记录数量（动态查询条件）
     *
     * @param map
	 *            Map<String, Object>
	 * @return int
     */
	int queryTotalByCondition(Map<String, Object> map);
	
	/**
     * 总记录数量（动态查询条件）
     *
	 * @param criteriaExample
	 *            CriteriaExample
	 * @return int
     */
	int queryTotalByCondition(DynamicCriteria criteriaExample);
		
	/**
     * 保存
     * @param ${classname} ${className}Entity
     *
     */
	void save(${className}Entity ${classname});
	
	/**
     * 批量保存（插入）
     * @param item List<${className}Entity>
     *
     */
	void saveBatch(List<${className}Entity> item);
	
	/**
     * 修改
     * @param ${classname} ${className}Entity
     *
     */
	void update(${className}Entity ${classname});
	
	/**
	 * 批量修改
     * @param item List<${className}Entity>
     *
     */
	void updateBatch(List<${className}Entity> item);
	
	/**
     * 删除
     * @param ${pk.attrname} ${pk.attrType}
     *
     */
	void delete(${pk.attrType} ${pk.attrname});
	
	/**
     * 批量删除
     * @param ${pk.attrname}s ${pk.attrType}[]
     *
     */
	void deleteBatch(${pk.attrType}[] ${pk.attrname}s);
}
